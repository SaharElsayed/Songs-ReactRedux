{"version":3,"sources":["components/SongList.component.js","actions/index.js","components/SongDetail.component.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","renderList","props","songs","map","song","className","key","title","onClick","selectSong","this","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"wOAIMA,E,2MAEFC,WAAa,WACT,OAAO,EAAKC,MAAMC,MAAMC,IAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BACIA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFzC,WAOJ,yBAAKC,UAAU,WAAWD,EAAKG,W,wEAQ3C,OAAO,yBAAKF,UAAU,mBAAmBK,KAAKV,kB,GAtB/BW,IAAMC,WA+BdC,cALS,SAAAC,GAEpB,MAAO,CAAEZ,MAAOY,EAAMZ,QAGc,CAAEO,WCjChB,SAAAL,GAEtB,MAAO,CACHW,KAAM,gBACNC,QAASZ,KD6BFS,CAAyCd,GEdzCc,cAJS,SAAAC,GACpB,MAAO,CAAEV,KAAMU,EAAMG,eAGVJ,CAlBI,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAClB,OAAKA,EAKD,6BACI,6CACA,qCAAWA,EAAKG,OAChB,wCAAcH,EAAKc,WAPhB,kDCcAC,EAfH,WACV,OACE,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCOKe,cAAgB,CAC3BlB,MAlBiB,WACjB,MAAO,CACH,CAAEK,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,qBAAsBW,SAAU,UAc7CD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAoB,kBAAhBA,EAAON,KACAM,EAAOL,QAGXC,KCTXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.fb4dbb4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends React.Component {\r\n\r\n    renderList = () => {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button\r\n                            className=\"ui button primary\"\r\n                            onClick={() => this.props.selectSong(song)}\r\n                        >\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // this.props === {songs: state.songs }\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // pass the songs object as props\r\n    return { songs: state.songs }\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);","// action creator\r\n\r\nexport const selectSong = song => {\r\n    //return an action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    }\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n    if (!song) {\r\n        return <div> Select a song </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Details for: </h3>\r\n            <p>Title: {song.title}</p>\r\n            <p>Duration: {song.duration}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { song: state.selectedSong }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\nimport { selectSong } from '../actions';\nimport SongList from './SongList.component';\nimport SongDetail from './SongDetail.component'\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        { title: 'No Scrubs', duration: '4:05' },\r\n        { title: 'Macarena', duration: '3:20' },\r\n        { title: 'All Stars', duration: '2:30' },\r\n        { title: 'I Want it that way', duration: '1:45' }\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload\r\n    };\r\n\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}